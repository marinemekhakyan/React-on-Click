{"version":3,"sources":["components/Cards/index.js","components/Wrapper/index.js","components/Heading/index.js","components/Jumbotron/index.js","App.js","index.js"],"names":["Cards","props","id","className","alt","name","src","image","onClick","handleOnClick","Wrapper","children","Heading","Jumbotron","message","score","topScore","App","state","cards","clicked","includes","setState","shuffle","concat","sort","Math","random","console","log","this","map","card","key","Component","ReactDOM","render","document","getElementById"],"mappings":"olCAkBeA,MAff,SAAeC,GACX,OACI,yBAAKC,GAAG,aAAY,yBAAKC,UAAU,SAC/B,yBAAKA,UAAU,iBACX,yBACAC,IAAKH,EAAMI,KACXC,IAAKL,EAAMM,MACXL,GAAID,EAAMC,GACVM,QAAS,kBAAMP,EAAMQ,cAAcR,EAAMC,W,MCJ1CQ,MAJf,SAAkBT,GACd,OAAO,yBAAKE,UAAU,WAAWF,EAAMU,W,MCO5BC,MARf,SAAiBX,GACb,OACI,yBAAKE,UAAU,a,MCURU,MAZf,SAAoBZ,GAChB,OACI,yBAAKE,UAAU,aACX,4BACI,0BAAMD,GAAG,SAAT,uBACA,gCAAQ,wBAAIA,GAAG,WAAWD,EAAMa,UAChC,gCAAQ,uBAAGZ,GAAG,SAAN,UAAsBD,EAAMc,MAA5B,iBAAiDd,EAAMe,c,OC8DhEC,E,2MA/DbC,MAAQ,CACNC,QACAJ,MAAO,EACPC,SAAU,EACVF,QAAS,mEACTM,QAAS,I,EASXX,cAAgB,SAAAP,GACV,EAAKgB,MAAME,QAAQC,SAASnB,GAC9B,EAAKoB,SAAS,CACZH,MAAO,EAAKI,QAAQ,EAAKL,MAAMC,OAC/BJ,MAAO,EACPD,QAAS,aACTM,QAAS,KAGX,EAAKE,SAAS,CACZH,MAAO,EAAKI,QAAQ,EAAKL,MAAMC,OAC/BJ,MAAO,EAAKG,MAAMH,MAAQ,EAC1BC,SAAU,EAAKE,MAAMH,MAAQ,EAAI,EAAKG,MAAMF,SAAW,EAAKE,MAAMH,MAAQ,EAAI,EAAKG,MAAMF,SACzFF,QAAS,GACTM,QAAS,EAAKF,MAAME,QAAQI,OAAOtB,M,EAKzCqB,QAAU,SAAAJ,GAER,OADeA,EAAMM,MAAK,kBAAMC,KAAKC,SAAW,O,mFAzBhDC,QAAQC,IAAIC,KAAKZ,MAAMC,OACvBW,KAAKR,SAAS,CAAEH,MAAOW,KAAKP,QAAQO,KAAKZ,MAAMC,W,+BA4BvC,IAAD,OACP,OACE,6BACE,kBAAC,EAAD,CACEL,QAASgB,KAAKZ,MAAMJ,QACpBC,MAAOe,KAAKZ,MAAMH,MAClBC,SAAUc,KAAKZ,MAAMF,WAEvB,kBAAC,EAAD,MACA,kBAAC,EAAD,KACGc,KAAKZ,MAAMC,MAAMY,KAAI,SAAAC,GAAI,OACxB,kBAAC,EAAD,CACEC,IAAKD,EAAK9B,GACVA,GAAI8B,EAAK9B,GACTG,KAAM2B,EAAK3B,KACXE,MAAOyB,EAAKzB,MACZE,cAAe,EAAKA,yB,GAvDhByB,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.bec419e5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Cards(props) {\n    return (\n        <div id=\"container\"><div className=\"cards\">\n            <div className=\"img-container\">\n                <img\n                alt={props.name}\n                src={props.image}\n                id={props.id}\n                onClick={() => props.handleOnClick(props.id)}\n                />\n            </div>\n        </div></div>\n    );\n}\n\nexport default Cards;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper (props) {\n    return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Heading(props) {\n    return (\n        <div className=\"heading\">\n            {/* <h3>Each art piece must only be clicked once! Click on one to start!</h3> */}\n        </div>\n    );\n}\n\nexport default Heading;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron (props) {\n    return (\n        <div className=\"jumbotron\">\n            <ul>\n                <span id=\"title\">Pop Art Memory Game</span>\n                <strong><h3 id=\"message\">{props.message}</h3></strong>\n                <strong><p id=\"score\">Score: {props.score} | Top Score: {props.topScore}</p></strong>\n            </ul>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React, { Component } from \"react\";\nimport Cards from \"./components/Cards\";\nimport Wrapper from \"./components/Wrapper\";\nimport Heading from \"./components/Heading\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  state = {\n    cards,\n    score: 0,\n    topScore: 0,\n    message: \"Each art piece must only be clicked once! Click on one to start!\",\n    clicked: []\n  };\n\n  componentDidMount() {\n    console.log(this.state.cards)\n    this.setState({ cards: this.shuffle(this.state.cards) });\n  \n  }\n\n  handleOnClick = id => {\n    if (this.state.clicked.includes(id)) {\n      this.setState({\n        cards: this.shuffle(this.state.cards),\n        score: 0,\n        message: \"Incorrect!\",\n        clicked: []\n      });\n    } else {\n      this.setState({\n        cards: this.shuffle(this.state.cards),\n        score: this.state.score + 1,\n        topScore: this.state.score + 1 > this.state.topScore ? this.state.score + 1 : this.state.topScore,\n        message: \"\",\n        clicked: this.state.clicked.concat(id)\n      });\n    }\n  };\n\n  shuffle = cards => {\n    let newCards = cards.sort(() => Math.random() - 0.5);\n    return newCards;\n  };\n\n  render() {\n    return (\n      <div>\n        <Jumbotron\n          message={this.state.message}\n          score={this.state.score}\n          topScore={this.state.topScore}\n        ></Jumbotron>\n        <Heading />\n        <Wrapper>\n          {this.state.cards.map(card => (\n            <Cards\n              key={card.id}\n              id={card.id}\n              name={card.name}\n              image={card.image}\n              handleOnClick={this.handleOnClick}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}